/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.Holidays;
import BLL.LeaveTypes;
import BLL.Request;
import DAL.HolidaysException;
import DAL.HolidaysInterface;
import DAL.HolidaysRepository;
import DAL.LeaveTypesException;
import DAL.LeaveTypesRepository;
import DAL.RequestException;
import DAL.RequestInterface;
import DAL.RequestRepository;
import DAL.RequestStatusException;
import DAL.RequestStatusRepository;
import MODEL.LeaveTypesComboBoxModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Armend
 */
public class RequestForm extends javax.swing.JInternalFrame {

    RequestInterface rr = new RequestRepository();
    LeaveTypesComboBoxModel ltcmb = new LeaveTypesComboBoxModel();
    LeaveTypesRepository ltr = new LeaveTypesRepository();
    RequestStatusRepository rsr = new RequestStatusRepository();
    HolidaysInterface hr = new HolidaysRepository();

    /**
     * Creates new form RequestForm
     */
    public RequestForm() {
        initComponents();
        loadComboBox();
    }    

    public void clear() {
        requestDescriptionTxtArea.setText("");
        requestDaysTxt.setText("");
        startDateCalendaer.setDate(null);
        endDateTxt.setText("");
        approvedDateTxt.setText("");
        requestStatusTxt.setText("");
        leaveTypeCmb.setSelectedIndex(-1);
        leaveTypeCmb.repaint();

    }

    public void loadComboBox() {
        try {
            List<LeaveTypes> lista = ltr.findAll();
            ltcmb.add(lista);
            leaveTypeCmb.setModel(ltcmb);
            leaveTypeCmb.repaint();
        } catch (LeaveTypesException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        startDateCalendaer = new com.toedter.calendar.JDateChooser();
        leaveTypeCmb = new javax.swing.JComboBox();
        requestDaysTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        approvedDateTxt = new javax.swing.JTextField();
        requestStatusTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        endDateTxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        requestDescriptionTxtArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        requestBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setText("Leave type :");

        jLabel8.setText("Request status:");

        startDateCalendaer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startDateCalendaerMouseClicked(evt);
            }
        });
        startDateCalendaer.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                startDateCalendaerPropertyChange(evt);
            }
        });

        jLabel2.setText("Request days:");

        approvedDateTxt.setEditable(false);

        requestStatusTxt.setEditable(false);

        jLabel4.setText("Start date:");

        jLabel5.setText("Approved date:");

        jLabel6.setText("End date:");

        endDateTxt.setEditable(false);
        endDateTxt.setMinimumSize(new java.awt.Dimension(6, 80));

        requestDescriptionTxtArea.setColumns(20);
        requestDescriptionTxtArea.setRows(5);
        jScrollPane3.setViewportView(requestDescriptionTxtArea);

        jLabel1.setText("Request description:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 153, 153));
        jLabel9.setText("Request");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2)
                .addGap(380, 380, 380)
                .addComponent(jLabel5))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(requestDaysTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252)
                .addComponent(approvedDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel4)
                .addGap(397, 397, 397)
                .addComponent(jLabel6))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(startDateCalendaer, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252)
                .addComponent(endDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel7)
                .addGap(389, 389, 389)
                .addComponent(jLabel8))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(leaveTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252)
                .addComponent(requestStatusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel9)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requestDaysTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approvedDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startDateCalendaer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leaveTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestStatusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        requestBtn.setText("Request");
        requestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(requestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestBtn)
                    .addComponent(cancelBtn))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel3))))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3)))
                .addGap(9, 9, 9)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void requestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBtnActionPerformed
           try {
                Request r = new Request();
                int i = 0;
                
                /*---Request_Days---*/
                if (!Utility.validRequestDays(requestDaysTxt.getText())) {
                    JOptionPane.showMessageDialog(null, "[ERROR]: Invalid request days input -> must contain only numbers");
                    return;
                }
                if (Short.parseShort(requestDaysTxt.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "[ERROR]: Invalid request days input -> must be pozitiv");
                    return;
                } else if (Short.parseShort(requestDaysTxt.getText()) > 365) {
                    JOptionPane.showMessageDialog(null, "[ERROR]: Invalid request days input -> 365 days max");
                    return;
                } else {
                    r.setRequestDays(Short.parseShort(requestDaysTxt.getText()));
                }

                /*---Request_Date---*/
                r.setRequestDate(new Date());

                /*---Start_Date---*/
                if (startDateCalendaer.getDate().compareTo(new Date()) < 0) {
                    JOptionPane.showMessageDialog(this, "[ERROR]: Invalid start date input -> cannot be a date before todays date");
                    return;
                } else if (startDateCalendaer.getDate().compareTo(Utility.toDate(LocalDate.now().plusMonths(1))) > 0) {
                    JOptionPane.showMessageDialog(this, "[ERROR]: Invalid start date input -> cannot be a date after 1 month");
                    return;
                } else {
                    r.setStartDate(startDateCalendaer.getDate());
                }

                /*---END_DATE---*/
                LocalDate endDate = LocalDate.now();
                SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
                while (Utility.toDate(endDate).equals(sf.parse(sf.format(startDateCalendaer.getDate())))) {
                    endDate = endDate.plusDays(1);
                }
                List<Holidays> list = hr.findAll();
                short days = Short.parseShort(requestDaysTxt.getText());
                for (int c = 0; c < days; c++) {
                    if (endDate.getDayOfWeek().getValue() == 6 || endDate.getDayOfWeek().getValue() == 7) {
                        days++;
                    }
                    for (int j = 0; j < list.size(); j++) {
                        if (((Holidays) list.get(j)).getStartDate().equals(Utility.toDate(endDate))) {
                            days++;
                        }
                    }
                    endDate.plusDays(1);
                }
                r.setEndDate(Utility.toDate(endDate));

                /*---LEAVE---*/
                if (leaveTypeCmb.getSelectedIndex() == -1) {
                    JOptionPane.showMessageDialog(this, "[ERROR]: Invalid leave input -> leave type must be selected");
                    return;
                }else if(((LeaveTypes) leaveTypeCmb.getSelectedItem()).getLeaveDescription().equals("Maternity Leave") 
                        && MainForm.getEmployee().getGender() == 'M'){
                    JOptionPane.showMessageDialog(null,"[ERROR]: U cannot request maternity leave ");
                    return;
                }else {
                    r.setLeave((LeaveTypes) leaveTypeCmb.getSelectedItem());
                }
                
                
                /*---REQUESTDESCRIPTION---*/
                r.setRequestDescription(requestDescriptionTxtArea.getText());

                /*---EMPLOYEE---*/
                r.setEmployee(MainForm.getEmployee());

                /*---REQUEST_STATUS---*/
                r.setRequestStatus(rsr.getPending());

                rr.create(r);
                clear();
            } catch (RequestException | HolidaysException | RequestStatusException | ParseException ex) {
                Logger.getLogger(RequestForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_requestBtnActionPerformed

    private void startDateCalendaerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startDateCalendaerMouseClicked

    }//GEN-LAST:event_startDateCalendaerMouseClicked

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        clear();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void startDateCalendaerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_startDateCalendaerPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateCalendaerPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField approvedDateTxt;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField endDateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox leaveTypeCmb;
    private javax.swing.JButton requestBtn;
    private javax.swing.JTextField requestDaysTxt;
    private javax.swing.JTextArea requestDescriptionTxtArea;
    private javax.swing.JTextField requestStatusTxt;
    private com.toedter.calendar.JDateChooser startDateCalendaer;
    // End of variables declaration//GEN-END:variables
}
